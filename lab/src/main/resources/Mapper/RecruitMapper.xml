<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gxuwz.lab.mapper.RecruitMapper">

    <resultMap type="Recruitment" id="RecruitResult">
        <id property="id" column="id"/>
        <result property="planName" column="plan_name"/>
        <result property="required" column="required"/>
        <result property="requireNum" column="require_num"/>
        <result property="sectionId" column="section_id"/>
        <result property="sectionName" column="section_name"/>
        <result property="labId" column="lab_id"/>
        <result property="status" column="status"/>
        <result property="labName" column="lab_name"/>
        <result property="userId" column="user_id"/>
    </resultMap>


    <select id="getList" parameterType="Recruitment" resultMap="RecruitResult">
		SELECT r.id,plan_name,required,require_num,section_id,lab_id,lab_name,STATUS FROM recruitment AS r,labs AS l WHERE r.lab_id=l.id ORDER BY status=2 DESC
	</select>

    <select id="stuGetList" parameterType="Recruitment" resultMap="RecruitResult">
-- 		select * from recruitment where status='2'
<!--		SELECT r.id,plan_name,required,require_num,section_id,lab_id,lab_name,STATUS FROM recruitment AS r,labs AS l WHERE r.lab_id=l.id AND STATUS='2'</select>-->
        SELECT recruitment.id,plan_name,required,require_num,section_id,lab_id,user_id,form.`id`,lab_name,form.status
        FROM `recruitment`
        LEFT JOIN `form` ON `recruitment`.`id` = `form`.`plan_id`
        LEFT JOIN `labs` ON `recruitment`.`lab_id` = `labs`.`id`
        WHERE `recruitment`.`STATUS` = 2
        LIMIT 0, 1000;</select>

    <select id="getRecruitById" parameterType="Recruitment" resultMap="RecruitResult">
		select * from recruitment WHERE id=#{id}
	</select>
    <select id="getSectionid" parameterType="Recruitment"  resultType="int">
	SELECT section_id
    FROM section
    WHERE section_name = #{sectionName} AND laboratory_id = #{labId}
	</select>
    <delete id="deleteById" parameterType="Integer">
		DELETE FROM recruitment WHERE id = #{id}
	</delete>

    <update id="updateById" parameterType="Recruitment">
		UPDATE recruitment set plan_name=#{planName} , required=#{required}, require_num=#{requireNum} WHERE id=#{id}
	</update>
    <update id="requestNum" parameterType="Recruitment">
		UPDATE recruitment set require_num=#{requireNum} WHERE id=#{id}
	</update>

    <insert id="save" parameterType="Recruitment" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO recruitment(plan_name, required, require_num, section_id, lab_id) VALUES (#{planName}, #{required}, #{requireNum}, #{sectionId}, #{labId})
	</insert>

    <update id="checkupdateById" parameterType="Recruitment">
		UPDATE recruitment set status=#{status} WHERE id=#{id}
	</update>

</mapper>